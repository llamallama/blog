<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel>
    <title>The Pipetogrep Blog - RSS Feed</title>
    <link>https://blog.pipetogrep.org/</link>
    <description>I&apos;m Chris. I blog here. I do it for me but if you enjoy it too then that makes me happy!</description>
    <language>en</language>
    <lastBuildDate>Sun, 05 Oct 2025 22:02:53 -0400</lastBuildDate>
    <atom:link href="https://blog.pipetogrep.org/rss.xml" rel="self" type="application/rss+xml" />
    <item>
        <title>A Tech Guide by an IT Person for Therapists</title>
        <link>https://blog.pipetogrep.org/2025/09/14/a-tech-guide-by-an-it-person-for-therapists/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/09/14/a-tech-guide-by-an-it-person-for-therapists/</guid>
        <pubDate>Sun, 14 Sep 2025 18:32:29 -0400</pubDate>
        <atom:updated>2025-10-05T22:02:33-04:00</atom:updated>
        <description><![CDATA[<h1>TL;DR (Too Long Didn't Read)</h1>
<p>These are my recommendations for the ideal therapist tech setup.</p>
<ul>
<li><a href="https://www.amazon.com/s?k=new+chromebook+plus">Chromebook (Plus Model)</a></li>
<li>Logitech C920 or Brio 4k webcam</li>
<li><a href="https://www.ebay.com/sch/i.html?_nkw=blue+yet">Used Blue Yeti Mic</a></li>
<li><a href="https://a.co/d/2qeBauF">This USB hub</a></li>
<li><a href="https://www.amazon.com/s?k=laptop+stand">A laptop stand</a> for good camera height if your webcam is not mounted on an external monitor.</li>
<li>Turn on HD video if available (off by default in Zoom)</li>
<li>Turn on background noise suppression if available</li>
<li>Be sure you are on a 5GHz WiFi network and not 2.4GHz</li>
<li>A clean quiet area with good front lighting</li>
<li>Only use your therapy device for therapy and nothing else.</li>
</ul>
<p>Keep reading if you want to know why.</p>
<h1>What Is This?</h1>
<p>Here are two facts about me:</p>
<ul>
<li>I am good at IT and tech overall</li>
<li>I am a recipient of mental health care</li>
</ul>
<p>Because of this, I often find myself giving tech advice to therapists. I do this in an effort to make my experience as a patient better. This post is meant to be a thorough guide for therapists who see patients remotely on how to get their tech right.</p>
<p>By &quot;right&quot; I mean:</p>
<ul>
<li>Making sure your patient sees good video quality</li>
<li>Making sure your patient hears good audio quality</li>
<li>Making sure you look engaged for your patient</li>
</ul>
<p>If you were seeing a patient in person, you would make the physical environment as comfortable as possible for them. The same should be done for remote patients.</p>
<p>With all the intro stuff out of the way, let's get into it!</p>
<h1>The Ideal Experience</h1>
<p>Before we get into the gear and software, we need to discuss what the ideal experience for your patients looks and sounds like. Let's do some comparisons.</p>
<h2>Video</h2>
<p>Which of these look better?</p>
<p><a href="/images/too_close.jpg"><img src="/images/too_close.jpg" alt="Please No" /></a>
<a href="/images/backlit.jpg"><img src="/images/backlit.jpg" alt="Better But No" /></a>
<a href="/images/frontlit.jpg"><img src="/images/frontlit.jpg" alt="Much Better!" /></a></p>
<p>The last one, obviously! The subject is front and center, fully front-lit, and the camera is the correct height and distance away.</p>
<h2>Audio</h2>
<p>Which of these microphones sound better?</p>
<ul>
<li><a href="/audio/mic_webcam.mp3">Webcam's built-in mic</a></li>
<li><a href="/audio/mic_airpods.mp3">Mic in Apple AirPods</a> - $250</li>
<li><a href="/audio/mic_dirty_buds.mp3">Mic in $10 pair of wired earbuds from a bodega</a> - $10</li>
<li><a href="/audio/mic_ideal.mp3">A used condenser mic from eBay</a> - $18-$35</li>
</ul>
<p>The webcam's mic is OK but picks up too much ambient noise. It is interesting that the cheap wired earbuds sound better than $250 Apple AirPods, but the reality is all Bluetooth mics are terrible. Finally, there is the directional condenser mic, which obviously sounds the best.</p>
<h1>Devices</h1>
<p>Even if your patient might be on a less than ideal setup, you are providing the option for an experience that is as close to an in-person experience as possible. This attention to detail comes across as professional. Think of it as the difference between conducting an in-person session in a messy and uncomfortable space versus a clean space that is free of distractions.</p>
<h2>...Not To Use</h2>
<p>The first decision is which device to use. Let's start with which one NOT to use. If at all possible, please do NOT use a phone.</p>
<p>&quot;Why not? It has everything I need all in one, right?&quot; Yes, it does but it has three big items in the &quot;cons&quot; list.</p>
<ol>
<li>Vertical video (portrait mode):</li>
</ol>
<p><a href="/images/portrait_mode.jpg"><img src="/images/portrait_mode.jpg" alt="Vertical video" /></a></p>
<p>Please please please, never ever subject your patient to a vertical video of yourself. This is not Instagram or TikTok. Your patient should have the option to see your face, shoulders, and if you gesticulate, your hands. The smaller the viewable area, the less your body language comes through, and the less of a human experience it is.</p>
<p>Something else to keep in mind is that while patients on their phone can easily turn their devices sideways, patients on their laptops and desktops cannot. By using the landscape (horizontal) video orientation, you accommodate everyone.</p>
<p>Finally, on some conferencing platforms like Zoom, it does whatever it can to fill the screen of the person you are talking to. Here is what happens to your vertical video when it zooms it in to fill their window.</p>
<p><a href="/images/portrait_mode_cutoff.jpg"><img src="/images/portrait_mode_cutoff.jpg" alt="" /></a></p>
<p>Please, once again, avoid subjecting patients to vertical video. Give them the best possible, most compatible, video experience by keeping it horizontal.</p>
<ol start="2">
<li>
<p>Poor camera placement: &quot;OK, so I'll just rotate the phone. Problem solved!&quot; Well, not quite. Look at where the camera is now. It's on the side. Now it looks like you're looking at something beside your patient. That makes you look less engaged or distracted.</p>
</li>
<li>
<p>Smaller screen. If your patient takes the time to show more than a vertical video of themselves, you want to be able to see their body language. This is more difficult to do when your screen is a quarter of the size of a normal laptop screen.</p>
</li>
</ol>
<p>&quot;OK, what about a tablet?&quot;</p>
<p>That solves problem #3, but not #1 and #2. Some tablets do allow the use of an external webcam, but iPads, which are what most tablet owners seem to use these days, do not.</p>
<h2>...To Use</h2>
<p>To give your patient the best possible visual experience, please use a laptop or desktop computer. For the sake of ease of use, let's stick with laptops.</p>
<p>In a laptop, you ideally want something:</p>
<ul>
<li>Affordable</li>
<li>Easy to use</li>
<li>Relatively secure</li>
<li>Self-updating</li>
<li>Free of distractions</li>
</ul>
<p>Here's the problem. Most &quot;standard&quot; laptops do not offer all of that. Let's look at our options.</p>
<h2>Macs</h2>
<p>Macs are nice, sure, but they are also expensive. Sure, you can find a deal here or there online but if you buy a used Mac from any place other than Apple, there is a decent chance that it will be stolen and locked to the company it was stolen from. You'll either have a brick (a locked Mac) or a machine that is monitored by the company it was stolen from. I refer you to <a href="https://blog.pipetogrep.org/2025/07/27/that-time-i-worked-with-a-laptop-thief/">That Time I Worked With a Laptop Thief</a>.</p>
<h2>PCs</h2>
<p>By &quot;PC&quot; I mean anything that runs Microsoft Windows. Windows devices tend to win in affordability and self-updating, but in terms of ease of use, security and free of distractions, not so much.</p>
<p>Yes, it will work, but if you are not that tech savvy, you are putting your patients' data at risk by using the OS that is the most common target of viruses and other types of malware. There's also the issue of Windows constantly showing ads, pushing Microsoft copilot, reminding you to enable Microsoft OneDrive Backup, and the list goes on. It takes a lot of work to get Windows to just get out of your way so you can give your patients the attention they require.</p>
<h2>Chromebooks (Plus models)</h2>
<p>That brings us to the sweet spot. The Google Chromebook Plus.</p>
<ul>
<li>Affordability - A Chromebook (Plus Model) powerful enough to handle modern video conferencing can be had for less than $400. As of the time of writing this post the Acer Chromebook Plus 514 is $352 on Amazon.</li>
<li>Ease of use - If you're not used to ChromeOS, it takes little time to learn. The best part is, you don't have to do anything to maintain it! It maintains itself!</li>
<li>Secure (relatively) - Compared to Windows, ChromeOS is less prone to getting viruses, adware, ransomware, etc. You don't even need to run any kind of antivirus. Obviously, your security is only as good as your computing habits, but ChromeOS really does hit the sweet spot when it comes to security and ease-of-use.</li>
<li>Self-updating - It actually does update itself and in a much less intrusive manner than Windows does.</li>
<li>Free of distractions - Turn on &quot;Do not disturb&quot; mode and you won't see a single notification from anywhere.</li>
</ul>
<p>I will not leave a link to a specific model as it will be out of stock and/or obsolete as this post ages. Instead, I will provide a link to this <a href="https://www.amazon.com/s?k=new+chromebook+plus">Amazon search</a>.</p>
<h1>Camera</h1>
<p>While you can use your laptop's built-in webcam, please don't. They are usually of subpar quality. Exceptions include higher end laptops, but in a Chromebook, it probably won't be that great.</p>
<p>If you want guaranteed good video quality, go with an external webcam. I have two recommendations:</p>
<h2><a href="https://www.logitech.com/en-us/shop/p/c920s-pro-hd-webcam.960-001257">Logitech C920s</a></h2>
<p>NOTE: Do <strong>NOT</strong> get the 920e model as its microphone is disabled and requires additional software to turn on.</p>
<ul>
<li>It costs $69.99 at the time this post was written.</li>
<li>Full 1080p video that still looks great despite how long this camera has been around.</li>
</ul>
<h2><a href="https://www.logitech.com/en-us/shop/p/brio-4k.960-001390">Logitech Brio 4K</a></h2>
<ul>
<li>More expensive at $169 at time this post was written, but damn it looks great at 4k!</li>
<li>More future proof as more and more people are getting 4k monitors. Video conferencing services don't handle 4K video now, but they will in the future.</li>
<li>No weird model confusion like the C920 has.</li>
</ul>
<h2>Camera Height, Position, Distance, and Angle</h2>
<p>Do you want your patients to see up your nose? If you do, they might not want to.</p>
<p>The camera should front and center and at eye level. If you're using an external monitor, mount the camera on top of it and that should be enough. If you're using your laptop, I recommend using a <a href="https://www.amazon.com/s?k=laptop+stand">laptop stand</a>. If you don't have, or don't want to purchase one, a stack of books will suffice.</p>
<p>The camera's distance and angle are as important as it's height and position. Too close, and you look like a cut off disembodied head. Get the angle wrong and your patients can only see your chest (too low) or your head from the chin up (too high).</p>
<h3>We Want This</h3>
<p><a href="/images/camera_good.jpg"><img src="/images/camera_good.jpg" alt="Ideal Camera Height, Position, Distance, and Angle" /></a></p>
<p>The camera is at eye level and is far enough that the subject is the main point of focus. The distance and angle are such that you don't feel like you're looking up at them.</p>
<h3>We Do Not Want This</h3>
<p><a href="/images/camera_bad1.jpg"><img src="/images/camera_bad1.jpg" alt="Nose Shot" /></a></p>
<p>This one is not that bad, but the camera is too low. This is what most people using a laptop present. Because the laptop is not on a stand, the view for the patient is like they are being looked down on from a high vantage point. They can also tell if you have any bats in the cave (boogers in your nose).</p>
<p><a href="/images/camera_bad2.jpg"><img src="/images/camera_bad2.jpg" alt="Back Up" /></a></p>
<p>Here the subject is too close. No matter the angle or height, the patient gets all head and some of it will be off out of the frame.</p>
<p><a href="/images/camera_bad3.jpg"><img src="/images/camera_bad3.jpg" alt="Bad Angle. Not Centered." /></a></p>
<p>A little better distance wise but the camera is too low and not centered. As you can see, the subject's head is cut off.</p>
<p><a href="/images/camera_bad4.jpg"><img src="/images/camera_bad4.jpg" alt="Too far. Bad angle." /></a></p>
<p>Here the camera is too far away and the laptop is angled up too high. The subject is now a small disembodied head.</p>
<h2>Lighting</h2>
<p>While no one expects you to go full streamer and invest in a selfie ring or other front lighting setup, please try to set up some place with enough front lighting that the camera is able to present a good image to your patient. To illustrate the point, here are a few more examples.</p>
<h3>We Want This</h3>
<p><a href="/images/camera_good.jpg"><img src="/images/camera_good.jpg" alt="Ideal Camera Height, Position, Distance, and Angle" /></a></p>
<p>Same picture as before, but as you can see the subject is well lit from the front.</p>
<h3>We Do Not Want This</h3>
<p><a href="/images/camera_bad5.jpg"><img src="/images/camera_bad5.jpg" alt="Low Light" /></a></p>
<p>With low light, the image looks grainy. Nothing says &quot;I'm talking on the web&quot; like low light graininess.</p>
<p><a href="/images/camera_bad6.jpg"><img src="/images/camera_bad6.jpg" alt="Back Light" /></a></p>
<p>When the light source is behind the subject, it's almost worse than low light.</p>
<h1>Microphone</h1>
<p>This is where things get a little more complicated. While you can use the microphone in your fancy new webcam, please refrain from doing so.</p>
<ul>
<li>The mic in webcams is omnidirectional. That means that it picks up noise from all around you. Your dog, kids, window mounted AC unit, sirens outside, all of it.</li>
<li>You're too far away from it for it to have any chance of sounding decent.</li>
</ul>
<p>As a reminder, here is what that <a href="/audio/mic_webcam.mp3">sounds like</a>.</p>
<p>Instead, you want a cardioid mic. Cardioid means that it only picks up sound that is directly in front of it. This effectively reduces the majority of the ambient sound around you.</p>
<p>Here is my one and only recommendation for an affordable, high quality mic that is easy to use.</p>
<h2><a href="https://www.logitechg.com/en-us/shop/p/yeti-premium-usb-microphone">Blue Yeti</a></h2>
<p>The venerable Blue Yeti.</p>
<p><img src="/images/blue_yeti.png" alt="Blue Yeti Microphone" /></p>
<p>Just plug it into a USB port, tweak a couple of knobs, and you'll have better mic quality than the majority of your peers. There are no drivers to install and little to figure out. It just works.</p>
<p>&quot;That's $139!!! I thought this was affordable!&quot; The good news is these mics have been around for a long time and are very cheap <a href="https://www.ebay.com/sch/i.html?_nkw=blue+yet">on eBay</a>! At the time of writing, there are available used for as low as $18!</p>
<p>In case your used one does not come with a manual, I've made it handy <a href="/pdfs/yeti.pdf">here</a>. The main thing to keep in mind is to set it to cardioid mode.</p>
<p><a href="/images/cardioid.png"><img src="/images/cardioid.png" alt="cardioid" /></a></p>
<p>Other things to note are:</p>
<ul>
<li>Adjust the gain knob to adjust the mic's sensitivity.</li>
<li>Keep the mic directly in front of you.</li>
<li>Be 6-8 inches away from the mic.</li>
<li>Speak at a normal volume. The mic is sensitive and you won't have to yell at all.</li>
</ul>
<p>Here, once again is how the Blue Yeti sounds in comparison to what most other people use:</p>
<ul>
<li><a href="/audio/mic_webcam.mp3">Webcam's built-in mic</a></li>
<li><a href="/audio/mic_airpods.mp3">Mic in Apple AirPods</a> - $250</li>
<li><a href="/audio/mic_dirty_buds.mp3">Mic in $10 pair of wired earbuds from a bodega</a> - $10</li>
<li><a href="/audio/mic_ideal.mp3">Blue Yeti condenser mic</a> - $18-$35</li>
</ul>
<h1>Plugging It All In</h1>
<p>So you got a Chromebook but it only has one or two USB ports. What you need is a USB hub. Since newer Chromebooks only have USB-C (little plug) and your mic and camera are USB-A (big plug), you'll need a USB-C to USB-A hub. This one is cheap and should allow you to plug everything in.</p>
<p><a href="https://a.co/d/2qeBauF">https://a.co/d/2qeBauF</a></p>
<h1>Software Settings</h1>
<p>This one is difficult because not everyone will be using the same software for video conferencing. But do look for these settings and enable them.</p>
<h2>High Definition Video</h2>
<p>This is off by default in Zoom.</p>
<p><a href="/images/zoom_hd1.png"><img src="/images/zoom_hd1.png" alt="Zoom Video Settings" /></a>
<a href="/images/zoom_hd2.png"><img src="/images/zoom_hd2.png" alt="Enable Zoom HD" /></a></p>
<p>With HD video, your patient sees much more of you.</p>
<p><a href="/images/hd_video.jpg"><img src="/images/hd_video.jpg" alt="HD Video" /></a></p>
<p>When Zoom scales up low resolution video to match the size of your patient's screen, this is what they see:</p>
<p><a href="/images/without_hd_video.jpg"><img src="/images/without_hd_video.jpg" alt="Without HD Video" /></a></p>
<p>Because of this very reason, I usually see my therapists from the chin up, or their forehead is cut off.</p>
<p>Another thing to keep in mind is many therapy platforms only do non-high definition video (looking at you Healow). In this situation, be sure to have your camera centered and that you are far enough away from it so your image does not get cut off.</p>
<h2>Background noise suppression.</h2>
<p>This removes background noise so your patient only hears your voice without the sirens, leaf blowers, and barking dogs that may be in the background.</p>
<p>Here's <a href="https://support.zoom.com/hc/en/article?id=zm_kb&amp;sysparm_article=KB0059985">how to enable it in Zoom</a></p>
<h2>Turn off self view.</h2>
<p>This one, in my opinion, is the most important setting to turn OFF. We as humans are always going to want to look at ourselves. As a therapist, however, your attention should be solely on your patient.</p>
<p>Personally, I find leaving self view on strange. Do we talk to people in real life while admiring ourselves in a pocket mirror? Some might, but we, as considerate people, do not.</p>
<p>Here's <a href="https://support.zoom.com/hc/en/article?id=zm_kb&amp;sysparm_article=KB0068249#mcetoc_1idnn461o4j">how to do it in Zoom</a>.</p>
<h1>Wireless Network Settings</h1>
<p>Ok, now it's time to get a little (more) technical. Ideally, you'll be using a 5GHz wireless network. What does that even mean?!</p>
<p>Wireless networks use radio waves. There are three frequencies of radio waves used for wireless networks. 2.4 GHz, 5GHz, and 6GHz.</p>
<p>While shorter range, 5GHz and 6GHz wireless networks allow for faster Internet speeds and are less prone to radio interference. In some areas, the 2.4 GHz spectrum is so over-saturated that it is nearly unusable.</p>
<p>How to check which wireless network frequency you are using varies from device to device, so the best I can do here is to show how to check what you are currently using and give you what to ask for if you reach out to tech support.</p>
<p>Since I'm recommending a Chromebook, I'll write how to check it on ChromeOS. For Windows and MacOS, I will refer you to other sites.</p>
<h2>ChromeOS</h2>
<ol>
<li>Click on the WiFi icon (next to the clock).</li>
<li>Click on your connected WiFi network.
<a href="/images/chromeos_wifi1.png"><img src="/images/chromeos_wifi1.png" alt="ChromeOS WiFi Settings 1" /></a></li>
<li>Click again on your connected WiFi network.
<a href="/images/chromeos_wifi2.png"><img src="/images/chromeos_wifi2.png" alt="ChromeOS WiFi Settings 2" /></a></li>
<li>Click on &quot;Advanced&quot;.
<a href="/images/chromeos_wifi3.png"><img src="/images/chromeos_wifi3.png" alt="ChromeOS WiFi Settings 3" /></a></li>
<li>Scroll down and look for &quot;Frequency&quot;. It should say &quot;5220&quot; or higher.
<a href="/images/chromeos_wifi4.png"><img src="/images/chromeos_wifi4.png" alt="ChromeOS WiFi Settings 4" /></a></li>
</ol>
<h2>Windows 11</h2>
<p>Elevenforum.com has an <a href="https://www.elevenforum.com/t/check-wi-fi-network-band-in-windows-11.37637/">article</a> on this.</p>
<h2>MacOS</h2>
<p>Macworld.com has an <a href="https://www.macworld.com/article/673593/how-to-tell-if-your-mac-wi-fi-is-2-4ghz-or-5ghz.html">article</a> on this.</p>
<h1>Single Use</h1>
<p>Please consider using the device you see patients on for therapy and therapy alone. It likely contains, or has access to, data with PHI (personal health information) in it. If you are using your therapy laptop to go on Facebook, shop, play games, and whatever else you do in your personal life, there is a much higher chance of that data being compromised.</p>
<p>I know it's less convenient, but the security of your patients' data matters more than convenience in this case.</p>
<h1>In Conclusion</h1>
<p>If you've read this far, thank you for your consideration. If you have any questions or comments about any of this, please email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>. Finally, thank you, therapists, for all you do with and for your patients. You're doing good and critical work and you should be proud.</p>
<p>Thank you and be well.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>That Time I Worked With a Laptop Thief</title>
        <link>https://blog.pipetogrep.org/2025/07/27/that-time-i-worked-with-a-laptop-thief/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/07/27/that-time-i-worked-with-a-laptop-thief/</guid>
        <pubDate>Sun, 27 Jul 2025 19:21:39 -0400</pubDate>
        <atom:updated>2025-07-29T12:18:37-04:00</atom:updated>
        <description><![CDATA[<figure><img src="https://blog.pipetogrep.org/images/laptop_thief_title.png" alt="That Time I Worked With a Laptop Thief" title="Milk Carton, Missing MacBook"><figcaption>Milk Carton, Missing MacBook</figcaption></figure><h2>Preamble</h2>
<p>I used to worked at a place where they had an IT contractor that was stealing laptops and reselling them for over a year. This post is the story of how he got caught. Real names of people and companies will not be used, but the tale and screenshots (with redactions) are all true.</p>
<h2>When I Went Back to IT</h2>
<p>I was burning out on my position as a DevOps Engineer. Instead of looking for yet another job doing the same thing, I asked my boss if I could fill a different role temporarily so I could reset while still being useful to the company. He agreed and asked what I had in mind.</p>
<p>The company's IT manager was leaving and the whole department's staff, tools, and processes really needed some attention. I volunteered to be the interim IT manager that handled banging the department back into shape. He liked the idea so I got started.</p>
<h2>The Contractor</h2>
<p>The only one left in the IT department was a single IT contractor that we will call Jim. Jim had been with the company for a little over a year. As I got to know Jim, I discovered that everything under his watch was falling apart. The IT closet was a gigantic mess. He was rarely available during working hours, he worked on who knows what at the office during the evening, and wasn't helpful when he was assisting with IT related issues.</p>
<p>I gave him the benefit of the doubt and figured that his department was understaffed and overworked for too long so the first order of business was to assemble a new team.</p>
<h2>The New Team Assembles</h2>
<p>After a month of helping with IT tickets basically on my own (Jim was often MIA), and after cleaning out the IT closet, I hired a new IT manager and support specialist. During their first week, I gave them a tour of the office including the newly reorganized IT closet. That was when I first noticed something was amiss.</p>
<p>We had just placed an order for 15 new MacBooks. While some of them had already gone out, the number that remained in the closet still looked smaller than it should have. I consulted the inventory and saw that six machines were unaccounted for.</p>
<h2>The Lies Begin</h2>
<p>To keep everything transparent and out in the open, I started a thread in the IT discussion Slack channel asking about the missing laptops and requested everyone on the team to speak up in the thread if they knew anything about it. My boss knew nothing. He could not since he works remotely. The new hires didn't know anything either since this was the first day they were seeing the IT closet.</p>
<p>Then Jim messages me, not in the thread but via DM.</p>
<p><a href="/images/laptop_thief1.png"><img src="/images/laptop_thief1.png" alt="Lies" /></a></p>
<p>He's telling me five of the laptops had dead batteries on arrival while the sixth went out to an employee. That was the first thing that didn't add up. Five out of fifteen brand new, sealed in box Apple laptops were dead on arrival? I know Apple's hardware isn't the most resilient, but that failure rate is unheard for them.</p>
<p>In the message he sent me five Apple repair case IDs. Upon looking them up, I see that they were suspiciously created right after I sent out the message about the missing devices. Even more suspicious, I find out that he created the repair requests under his personal Apple account rather than the company account, preventing me from gathering more information about the requests.</p>
<h2>The Lies Continue</h2>
<p>The next day, two FedEx boxes arrive containing two brand new MacBooks. The FedEx label said it was from Apple's 5th Ave store in Manhattan (which was walking distance from the office). There were two things odd about these machines:</p>
<ol>
<li>Neither of them were enrolled in our company's Apple Business Manager account. That means we could not autoenroll them into our MDM.</li>
<li>The FedEx label looked like it was printed on an InkJet printer from the FedEx website. This is not how Apple does things.</li>
</ol>
<p>Later Jim claims that two of the laptops have been replaced. I thank him and ask that he not take laptops home while we get all this figured out. He gaslights me by saying he verbally told me about the dead machines and that I must have forgotten. He then states that he does not take laptops home &quot;at all&quot;.</p>
<p><a href="/images/laptop_thief2.png"><img src="/images/laptop_thief2.png" alt="More lies" /></a></p>
<h2>Apple Get Involved. The Lies Get Discovered.</h2>
<p>At this point, I'm still under the impression that something is fishy, but Jim still gets the benefit of the doubt. My responsibility at this point was not to accuse or speculate, but collect date and see where it led. I decided to consult Apple.</p>
<p>I took the two new laptops that arrived to the 5th Ave Apple store. I explained the situation I was in and asked if they could tell me anything about the origin of them. They were not purchased by the company. Instead, the name associated with both machines was Jim himself.</p>
<p>Meanwhile, all 5 of the Apple repair requests that he created got as far as Apple sending empty boxes to retrieve the 5 &quot;broken&quot; machines. Were those boxes sent to the company? Nope! They were sent to Jim's place of residence.</p>
<p>Finally, I asked about the FedEx shipping labels from the &quot;replacement&quot; machines. I asked how and from where they are normally sent. They confirmed that they do NOT ship repairs from an Apple store and instead send them from Apple Repair Centers, which in this case, was in a neighboring state.</p>
<p>Jim has now been caught in multiple lies:</p>
<ul>
<li>&quot;I believe 2 of the defective laptops have been replaced and should be at the office right now.&quot; - Two laptops did arrive to the office, but they did not belong to the company. They belonged to him.</li>
<li>&quot;Once again, I do no take laptops home at all.&quot; - Then why did he have the Apple repair boxes sent to his home address?</li>
<li>The FedEx labels were clearly a cover. The from address was spoofed to look like Apple. The FedEx tracking for them never got past the label being created which means Jim hand delivered them to the office (no cost that way).</li>
<li>The Apple repair cases never updated to indicate that the machines were received, so how could we have two replacements from them?</li>
<li>The &quot;replacement&quot; laptops had different serial numbers. Devices Apple repairs retain their serial numbers.</li>
<li>&quot;One laptop is being prepped for a new hire starting Monday.&quot; The new hire did not have the missing laptop.</li>
</ul>
<h2>Jim Plays the Victim</h2>
<p>While we were civil and as non-accusatory as possible, and were doing our best to only seek answers about the missing property that Jim was responsible for keeping track of, Jim decides it's best to go full victim.</p>
<p><a href="/images/laptop_thief3.png"><img src="/images/laptop_thief3.png" alt="Time to play the victim" /></a></p>
<h2>Jim Gets Let Go</h2>
<p>At this point, we were not sure about the entirety of what was going on, but we knew that we had machines missing, and nothing that Jim was saying was adding up and that we were being lied to. Jim was given 24 hours to reproduce all of the missing machines which he failed to do. At that point we had no choice but to let him go before he had the chance to quit himself.</p>
<h2>We Get Theft Confirmation</h2>
<p>My first act as interim IT manager was to fix the auto-enrollment of company machines. By this, I mean making it so the devices the company purchased know to register themselves via mobile device management (MDM) and install the company's software, settings, etc. all automatically straight out of the box. Jim was manually enrolling them and could never give a straight answer besides &quot;it's hard&quot; as to why he continued to do it that way.</p>
<p>A few days after Jim was let go, we start getting Slack notifications about new device enrollments. They were being enrolled from places like Russia, China, and Kazakhstan and registered to people that did not work for the company. We proceeded to lock the devices. Most of them were the devices that went missing. It makes sense now why Jim never bothered fixing device auto-enrollment.</p>
<p>These enrollments continued for another year, some new, and some the same machines being resold again by people that knew how to unlock and wipe the machines back to factory only to have them locked again on first boot. We followed some of these machines across multiple countries and geographic zones.</p>
<p>The real victim is not the company itself, but the people that unknowingly bought these stolen devices. They open up their sealed, in-box MacBook only to have it immediately turn itself into a paperweight when it gets locked by the company it belongs to.</p>
<h2>Another Mystery Laptop Appears. Things Get Stranger.</h2>
<p>The few days after Jim's departure, another new MacBook arrives in the mail. I take it to the Apple Store again, and they tell me it was not purchased there like the other two were. Instead, it was purchased by a company called &quot;Ingram Micro&quot; who is a large reseller of IT equipment.</p>
<p>I call Ingram and they give me the name of the purchaser and the company they worked for when the purchase was made. I will not name the company, but I will say that they are a department of defense (DoD) contractor.</p>
<p>It took a few days but after many phone calls and messages, I got through to the DoD contractor's IT and legal teams and was able to explain what was going on. It was discovered that Jim was working for them (at the same time!) and stole one of their laptops as a replacement for one that he stole from us!</p>
<p>By doing that, he got himself let go from that job as well. I later found out from my boss that an FBI agent sat him down and he confessed to everything. DoD jobs do not seem to take kindly to property theft.</p>
<h2>Jim Gets Petty</h2>
<p>Weeks went by and Jim still hadn't returned the company laptop that was assigned to him. After multiple reminders, a very beat up box arrived in the mail via UPS. It contains two laptops from Jim with zero protective padding. The machines were trashed inside and out.</p>
<p><a href="/images/laptop_thief4.jpg"><img src="/images/laptop_thief4.jpg" alt="UPS box in rough shape" /></a></p>
<p><a href="/images/laptop_thief5.jpg"><img src="/images/laptop_thief5.jpg" alt="Inside the box" /></a></p>
<p><a href="/images/laptop_thief6.jpg"><img src="/images/laptop_thief6.jpg" alt="Top of the returned laptops" /></a></p>
<p><a href="/images/laptop_thief7.jpg"><img src="/images/laptop_thief7.jpg" alt="Gross laptop interior with surprise staple" /></a></p>
<p><a href="/images/laptop_thief8.jpg"><img src="/images/laptop_thief8.jpg" alt="Scrapped up laptop bottom" /></a></p>
<h2>What Happened to Jim?</h2>
<p>I don't really know. The company that I worked for dropped the ball on pressing charges. All told, he stole more than 30 laptops over the year he worked there. The monetary value of the theft was well into the range of grand larceny, but I guess they didn't care enough to pursue it. I'm not sure if he got so lucky with the DoD contractor.</p>
<h2>What Did I Learn?</h2>
<p>A lot!</p>
<ul>
<li>Maintain a real inventory system instead of just a spreadsheet. If that was done from the beginning, this whole thing might not have happened.</li>
<li>I also learned about Apple Business manager, how Apple MDM software works at a low level, and how IT departments manage large fleets of devices.</li>
<li>I learned that if something feels off, it is worth investigating.</li>
<li>Don't hire individual contractor. Go through a reputable recruiter and run background checks. This did not happen with Jim.</li>
<li>Most importantly, I learned that an engineer's natural curiosity is applicable to more that just engineering. The more I dug into what Jim said, the more lies I found.</li>
</ul>
<h2>What Did Jim Learn?</h2>
<p>Something I hope. If he simply maintained that he didn't know anything, he might have gotten further with his ruse. Instead, he kept talking and kept digging himself deeper. At the most, I can hope that he learned not to pull this crap anymore in the future. At the very least, he learned not to lie to me.</p>
<p>Want to discuss? Email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>Using AI to Enhance the Retro Computing Experience</title>
        <link>https://blog.pipetogrep.org/2025/07/13/using-ai-to-enhance-the-retro-computing-experience/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/07/13/using-ai-to-enhance-the-retro-computing-experience/</guid>
        <pubDate>Sun, 13 Jul 2025 23:35:35 -0400</pubDate>
        <atom:updated>2025-07-14T00:31:31-04:00</atom:updated>
        <description><![CDATA[<figure><img src="https://blog.pipetogrep.org/images/brick_ai1.jpg" alt="Using AI to Enhance the Retro Computing Experience" title="ChatGPT on the iBook"><figcaption>ChatGPT on the iBook</figcaption></figure><h2>The Problem</h2>
<p>Accessing ChatGPT from the command line on various flavors of Unix like operating systems is nothing new. I found an interesting use for it today that I had not previously considered. That is to make researching from a retro computer possible where it would normally be not be so.</p>
<p>For example, as previously discussed in my post <a href="/2025/05/14/netbsd-ibooks-python-oh-my/">NetBSD &amp; iBooks &amp; Python, oh my!</a>, I like to use old hardware for useful things like, in this case, a Pygame development machine. That works great but the problem is that I'm not very good at Python and have to look up lots of stuff. Since I don't have access to a modern browser available on this machine, this is my usual experience especially when Stack Overflow comes into the picture.</p>
<p><a href="/images/brick_ai2.png"><img src="/images/brick_ai2.png" alt="No Stack Overflow without cookies or JavaScript" /></a></p>
<h2>The AI Workaround</h2>
<p>Thankfully, <a href="https://github.com/0xacx/chatGPT-shell-cli">chatGPT-shell-cli</a> exists in NetBSD's package repos and works great on my PowerPC iBook. Its dependencies are very light requiring only Bash, jq (a command line JSON parser), and curl. If you wanted to, you could even do this on old OS X with Macports!</p>
<p>Here are a couple screenshots of it in action!</p>
<p><a href="/images/brick_ai3.png"><img src="/images/brick_ai3.png" alt="ChatGPT on NetBSD Screenshot 1" /></a>
<a href="/images/brick_ai4.png"><img src="/images/brick_ai4.png" alt="ChatGPT on NetBSD Screenshot 2" /></a></p>
<h2>Summary</h2>
<p>While I've been very &quot;old man yells at cloud&quot; about anything AI related and slow to adopt it, I feel that it holds a lot of potential to keep old machines useful. That's always a win in my book!</p>
<p>Want to discuss? Email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>Compiling Helm on OpenBSD</title>
        <link>https://blog.pipetogrep.org/2025/07/04/compiling-helm-on-openbsd/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/07/04/compiling-helm-on-openbsd/</guid>
        <pubDate>Fri, 04 Jul 2025 17:03:14 -0400</pubDate>
        <atom:updated>2025-09-13T01:20:02-04:00</atom:updated>
        <description><![CDATA[<figure><img src="https://blog.pipetogrep.org/images/helm_openbsd.png" alt="Compiling Helm on OpenBSD" title="Helm + OpenBSD"><figcaption>Helm + OpenBSD</figcaption></figure><p>Despite my best efforts, I could not find a single practical tutorial on how to install Helm for OpenBSD. It's not in OpenBSD's package manager nor is it in the ports tree. That leaves building it from source. Here's how.</p>
<h2>Build Steps</h2>
<pre><code>pkg_add go git gmake bash
git clone https://github.com/helm/helm
cd helm
gmake
doas gmake install
</code></pre>
<p>After that, helm should be installed to <code>/usr/local/bin/</code></p>
<p>That's it!</p>
<p>Want to discuss? Email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>Blogging Like It&apos;s 1998</title>
        <link>https://blog.pipetogrep.org/2025/06/25/blogging-like-it-s-1998/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/06/25/blogging-like-it-s-1998/</guid>
        <pubDate>Wed, 25 Jun 2025 01:15:26 -0400</pubDate>
        <atom:updated>2025-07-04T18:21:29-04:00</atom:updated>
        <description><![CDATA[<figure><img src="https://blog.pipetogrep.org/images/chonk_blogging.jpg" alt="Blogging Like It&apos;s 1998" title="Meet Chonk"><figcaption>Meet Chonk</figcaption></figure><h2>Meet Chonk (Controller For Scale)</h2>
<p><a href="/images/chonk_scale.jpg"><img src="/images/chonk_scale.jpg" alt="Chonk Blogging" /></a></p>
<p>As you can see, Chonk is a big girl. She is a Dell Inspiron 7000 from 1998 and weighs in at 8 pounds. Chonk comes with:</p>
<ul>
<li>Pentium II CPU at 366 MHz</li>
<li>320 MB RAM</li>
<li>4 GB CF card as its hard drive</li>
<li>ATI Mobility 1 (removable!) video card</li>
<li>14 inch LCD at 1024x768</li>
<li>Floppy disc/CD ROM combo module</li>
<li>1 USB 1.1 Port</li>
<li>2 PCMCIA card slots</li>
</ul>
<p>I am showing you this large, slow, 27 year old laptop because that is what I have written this blog post with. Not only was the text written on it, but it also edited all of the images, performed all the web research, generated all the HTML with a <a href="https://bssg.dragas.net/">static site generator</a>, uploaded a copy of the site to <a href="https://github.com/llamallama/blog">GitHub</a>, and kept all the blog files in sync with my server in real time. It even triggered a Kubernetes redeploy to take the changes live!</p>
<h2>WTF! Why? How?!</h2>
<p>The why is always the same. &quot;Because I can.&quot; But really, it's yet more proof of how wasteful the tech industry is and a challenge to myself to see if I could do everything required for this task entirely with this machine.</p>
<p>So how is Chonk doing all of this? With the venerable <a href="https://www.openbsd.org/">OpenBSD</a>! OpenBSD supports older 32bit systems and has all the tools and packages required for my blog workflow natively available. Those tools are:</p>
<ul>
<li>Bash (For updating this site via <a href="https://bssg.dragas.net/">BSSG</a>)</li>
<li>Git (Version Control)</li>
<li>Vim (Text editing via command line)</li>
<li>cmark (Markdown processor)</li>
<li>kubectl (Updating the site via Kubernetes))</li>
<li>Dillo (Tiny web browser)</li>
<li>Scrot (Taking screenshots via command line)</li>
<li>ImageMagick (Converting and resizing images via command line)</li>
<li>Syncthing (Real time file sync tool)</li>
<li>CWM (Super lightweight window manager)</li>
</ul>
<h2>Hardware</h2>
<p>I got Chonk from <a href="https://vcfed.org/events/vintage-computer-festival-east/">VCF East</a> 2025. She was $40 and in perfect condition. She had no hard disk but otherwise functioned perfectly.</p>
<p>To get her booting, I used a CF card to mini IDE adapter and an industrial CF card. To get her on the Internet, I used a USB 802.11n WiFi adapter coupled with PCMCIA USB 2 card. While she does have 1 USB port built in, it is USB 1.2 which would limit bandwidth to 12 Mb/s.</p>
<h2>Software (OpenBSD)</h2>
<p><a href="/images/chonk_screenshot.png"><img src="/images/chonk_screenshot.png" alt="OpenBSD Screenshot" /></a></p>
<p>The setup itself was simple. It is a standard OpenBSD 7.7 i386 install and everything hardware wise just works. The biggest challenge is it is so very very slow. By slow I mean:</p>
<ul>
<li>OS install time: 45 minutes</li>
<li>Boot time: 5 min 34 sec</li>
<li>BSSG rebuild time: 2 - 3 minutes depending on what is cached</li>
<li>Large HEIC to small JPG resize time: ~1 min per file</li>
</ul>
<p>Installing additional packages usually involved running the <code>pkg_add</code> command then walking away for a few minutes to do something else. This is due to the Pentium II being very slow with decompressing the TGZ (tar/gzip) packages.</p>
<p>Once everything was installed and configured, however, Chonk makes for an excellent and distraction free blog writing tool. Dillo is just enough to look up stuff on the web. The ImageMagick tools slowly converted and scaled HEIC files from my iPhone to smaller JPGs. Syncthing keeps all the blog related files synced across my server and other computers. Vim is its usual fantastic self that runs on everything.</p>
<p>Despite the slowness, at any given time, I still had 13-35 MB of free RAM and minimal swap usage. The only real concession I had to make was to only run Syncthing manually at the end of my writing sessions because it is by far the biggest RAM user at 66 MB. The actual writing process, however, was fast and comfortable.</p>
<h2>Why not Linux or NetBSD?</h2>
<p>I tried! <a href="https://www.netbsd.org/">NetBSD</a> was my first choice but the installer failed to boot with some obscure message and I didn't feel like dealing with it.</p>
<p>Next I tried <a href="http://tinycorelinux.net/">TinyCore Linux</a> which was much faster than OpenBSD in every way! The problem there was a lack of software availability. Cmark and Syncthing were not available and the versions the other standard tools BSSG relies on (awk, sed, etc.) are the BusyBox versions which may function differently than their full sized counterparts.</p>
<h2>Conclusion</h2>
<p>What did I get from this exercise? I learned the bare minimum required to do this task. I really enjoyed learning how to use the CWM window manager. I was once again impressed at how useful yet minimal the smaller BSD flavors are.</p>
<p>Now enjoy some sexy action shots of Chonk. Work it girl!</p>
<p><a href="/images/chonk_openbsd.jpg"><img src="/images/chonk_openbsd.jpg" alt="Chonk OpenBSD" /></a></p>
<p><a href="/images/chonk_front_closed.jpg"><img src="/images/chonk_front_closed.jpg" alt="Chonk Front" /></a></p>
<p><a href="/images/chonk_back.jpg"><img src="/images/chonk_back.jpg" alt="Chonk Back" /></a></p>
<p><a href="/images/chonk_stickers.jpg"><img src="/images/chonk_stickers.jpg" alt="Chonk Stickers" /></a></p>
<p>Want to discuss? Email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>How to Install Windows NT 4 Server on Proxmox</title>
        <link>https://blog.pipetogrep.org/2025/05/23/how-to-install-windows-nt-4-server-on-proxmox/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/05/23/how-to-install-windows-nt-4-server-on-proxmox/</guid>
        <pubDate>Fri, 23 May 2025 18:41:50 -0400</pubDate>
        <atom:updated>2025-07-13T23:49:24-04:00</atom:updated>
        <description><![CDATA[<figure><img src="https://blog.pipetogrep.org/images/win_nt.png" alt="How to Install Windows NT 4 Server on Proxmox" title="Windows NT 4 Server Boot Screen"><figcaption>Windows NT 4 Server Boot Screen</figcaption></figure><h2>What?</h2>
<p>Windows NT 4 doesn't virtualise well. This guide shows how to do it with Proxmox with a minimal amount of pain.</p>
<h2>Why?</h2>
<p>I never got to use it and I only have so much room for old computers.</p>
<h2>You Will Need</h2>
<ul>
<li><a href="https://www.proxmox.com">Proxmox Virtual Environment</a></li>
<li><a href="https://winworldpc.com/product/windows-nt-40/40">Windows NT 4 Server ISO</a></li>
<li>Realtek 8139 Network Card drivers converted into an ISO file.
<ul>
<li><a href="/downloads/win_nt_proxmox/realtek8139.iso">My ISO converted copy</a></li>
<li><a href="https://archive.org/details/realtek-rtl-8139-lan-drivers-win-9x-win-nt-2000.-7z">Original driver source</a></li>
</ul>
</li>
<li>LSI 53C895A SCSI controller drivers converted to a floppy image.
<ul>
<li><a href="/downloads/win_nt_proxmox/lsi_533895a_floppy.img">My floppy converted copy</a></li>
<li><a href="https://www.helpdrivers.com/disks/LSI/LSI53C895A/">Original driver source</a></li>
</ul>
</li>
<li><a href="https://archive.org/details/WindowsNTSP6HighEncryption">Windows NT 4 Service Pack 6 High Encryption version</a>. WinWorld offers the high encryption version of the installer but the standard encryption version of SP6 so it refuses to install. That is why I grabbed SP6 from archive.org instead.</li>
<li>Universal VBE Video Display Driver converted to an ISO. I used the beta 2015.01.01 version.
<ul>
<li><a href="/downloads/win_nt_proxmox/vbempk.iso">My ISO converted copy</a></li>
<li><a href="https://navozhdeniye.narod.ru/vbemp.htm#2">Original driver source</a></li>
</ul>
</li>
<li><a href="https://packages.vmware.com/tools/esx/3.5latest/windows/x86/VMware-tools-windows-3.5.0-988599.iso">VMware tools 3.5.0 ISO</a> (for the vmmouse driver).
<ul>
<li>Here is the <a href="https://web.archive.org/web/20230228033421/https://packages.vmware.com/tools/esx/3.5latest/windows/x86/VMware-tools-windows-3.5.0-988599.iso">Wayback Machine copy</a> in case the original one goes down.</li>
</ul>
</li>
</ul>
<h2>VM Creation</h2>
<p>First upload all the ISO files thorough Proxmox's web interface. Now create a new VM with these settings.</p>
<ul>
<li>General
<ul>
<li>ISO Image: <strong>en_winnt_4.0_svr.iso</strong></li>
</ul>
</li>
<li>OS
<ul>
<li>Guest OS Type: <strong>Microsoft Windows</strong></li>
<li>Guest OS Version: <strong>2000</strong></li>
</ul>
</li>
<li>System
<ul>
<li>Graphic card: <strong>Standard VGA</strong>. This will allow for higher resolution settings rather than with the default.</li>
<li>SCSI Controller: <strong>LSI 53C895A</strong></li>
</ul>
</li>
<li>Disks
<ul>
<li>Disk size: <strong>4GB</strong>. I could not get it to format a boot drive larger than this.</li>
<li>Bus/Device: <strong>SCSI</strong>. <strong>IMPORTANT:</strong> Do NOT use IDE. It will be slow noticeably slower and for some reason leads to file system corruption on NT4 guests despite changing the caching options.
<a href="/images/nt_corrupt.png"><img src="/images/nt_corrupt.png" alt="DLL File Corruption" /></a></li>
</ul>
</li>
<li>CPU
<ul>
<li>Sockets: <strong>1</strong></li>
<li>Cores: <strong>1</strong></li>
<li>Type: <strong>Pentium</strong>. <strong>IMPORTANT:</strong> The default CPU selection will lead to an immediate BSOD from the installer.</li>
</ul>
</li>
<li>Memory
<ul>
<li>Memory (MiB): <strong>256</strong>. 32 or higher will suffice.</li>
</ul>
</li>
<li>Network
<ul>
<li>Model: <strong>Realtek RTL8139</strong>. <a href="https://virtuallyfun.com/2012/12/20/installing-windows-nt-4-0-on-proxmoxve/">This post</a> says to manually edit the VM config to enable the AMD PCNET card which NT4 has built in support for, but it only runs at 10 Mb/s. The RTL8139 will allow for 100 Mb/s, but we have to install the driver post installation.</li>
</ul>
</li>
</ul>
<p>Now we have to make the SCSI drivers available to the Windows installer. It only accepts additional mass storage drivers as a floppy disk. Proxmox does not have a web interface for managing floppies so we have to configure this from the command line. Replace <code>VM_ID</code> in the following steps with the ID of your VM.</p>
<ol>
<li>Transfer lsi_533895a_floppy.img to the Proxmox server and move it to <code>/var/lib/vz/images/VM_ID/floppy.img</code>.</li>
<li>Open <code>/etc/pve/qemu-server/VM_ID.conf</code>, add this to the bottom, then save.</li>
</ol>
<pre><code>args: -drive file=/var/lib/vz/images/VM_ID/floppy.img,if=floppy,index=0
</code></pre>
<h2>OS Installation</h2>
<ol>
<li>Switch to the VM's console, start the VM, then begin pressing F6 when you see the Proxmox logo. Keep pressing until you see this screen.</li>
</ol>
<p><a href="/images/win_nt_f6_boot.png"><img src="/images/win_nt_f6_boot.png" alt="DLL File Corruption" /></a></p>
<ol start="2">
<li>Press the <strong>S</strong> key.</li>
<li>Select <strong>Other</strong></li>
</ol>
<p><a href="/images/win_nt_other.png"><img src="/images/win_nt_other.png" alt="Other" /></a></p>
<ol start="4">
<li>Press <strong>Enter</strong></li>
</ol>
<p><a href="/images/win_nt_insert.png"><img src="/images/win_nt_insert.png" alt="Insert Disk" /></a></p>
<ol start="5">
<li>Press <strong>Enter</strong> again to select <strong>Symbios PCI SCSI High Performance Driver</strong></li>
</ol>
<p><a href="/images/win_nt_scsi_driver.png"><img src="/images/win_nt_scsi_driver.png" alt="SCSI Driver" /></a></p>
<ol start="6">
<li>You should now see <strong>Symbios PCI SCSI High Performance Driver</strong> in the list of mass storage devices. Press <strong>Enter</strong>.</li>
</ol>
<p><a href="/images/win_nt_mass_storage.png"><img src="/images/win_nt_mass_storage.png" alt="Mass Storage Devices" /></a></p>
<ol start="7">
<li>Continue through the installation steps being sure to format the drive as <strong>NTFS</strong>.</li>
</ol>
<p>When the graphical installer comes up, you will notice the mouse is difficult to use. We will fix that in a later step. Struggle with the mouse or use the keyboard for the rest of the installation.</p>
<ol start="8">
<li>Continue the installation until you get to the Network Adapter search screen. Click <strong>Select from list...</strong></li>
</ol>
<p><a href="/images/win_nt_network_adapters.png"><img src="/images/win_nt_network_adapters.png" alt="Network Adapters" /></a></p>
<ol start="9">
<li>Select <strong>MS Loopback Adapter</strong>. <strong>IMPORTANT</strong>. Do NOT select &quot;Have Disk&quot; and install the RTL8139 drivers now. It will get stuck on installing TCP/IP and you will have to start over. We're using the MS Loopback Adapter to get around this bug.</li>
</ol>
<p><a href="/images/win_nt_loopback.png"><img src="/images/win_nt_loopback.png" alt="MS Loopback Adapter" /></a></p>
<ol start="10">
<li>Continue through the installer until it asks if there is a DHCP server on your network. Select <strong>No</strong>.</li>
</ol>
<p><a href="/images/win_nt_dhcp.png"><img src="/images/win_nt_dhcp.png" alt="DHCP?" /></a></p>
<ol start="11">
<li>Enter an IP address. Anything will do. We will be replacing it later.</li>
</ol>
<p><a href="/images/win_nt_ip.png"><img src="/images/win_nt_ip.png" alt="IP Address" /></a></p>
<ol start="12">
<li>Finish the installation and restart.</li>
</ol>
<h2>Service Pack 6 Installation</h2>
<ol>
<li>Press CTRL-ALT-DEL through the Proxmox console and login as Administrator.</li>
</ol>
<p><a href="/images/win_nt_cad.png"><img src="/images/win_nt_cad.png" alt="The three finger salute" /></a></p>
<ol start="2">
<li>In the VM hardware settings, switch to the ISO containing the Service Pack 6 installer.</li>
<li>Back in the console, navigate to the CD-ROM drive and run the installer.</li>
</ol>
<p><a href="/images/win_nt_sp6.png"><img src="/images/win_nt_sp6.png" alt="Service Pack 6 Installer" /></a></p>
<ol start="4">
<li>Reboot.</li>
<li>Go to Start &gt; Run, then run <strong>winver</strong> to verify your results.</li>
</ol>
<p><a href="/images/win_nt_winver.png"><img src="/images/win_nt_winver.png" alt="winver" /></a></p>
<h2>Mouse Drivers</h2>
<p>Lets fix the wonky mouse.</p>
<ol>
<li>In the VM hardware settings, switch to the ISO containing VMware Tool 3.5.0.</li>
<li>Back in the console, close the VMware tools installer. Go to <strong>Start &gt; Settings &gt; Control Panel &gt; Mouse</strong>.</li>
<li>In the <strong>General</strong> tab, click <strong>Change...</strong></li>
</ol>
<p><a href="/images/win_nt_mouse_settings.png"><img src="/images/win_nt_mouse_settings.png" alt="Mouse Settings" /></a></p>
<ol start="4">
<li>Click <strong>Have Disk...</strong></li>
</ol>
<p><a href="/images/win_nt_mouse_select.png"><img src="/images/win_nt_mouse_select.png" alt="Select Device" /></a></p>
<ol start="5">
<li>Click <strong>Browse...</strong> and navigate to <strong>D:\program files\VMware\VMware Tools\Drivers\mouse\winnt</strong>.</li>
</ol>
<p><a href="/images/win_nt_vmmouse.png"><img src="/images/win_nt_vmmouse.png" alt="Locate File" /></a></p>
<ol start="6">
<li>Finish installing the VMware Pointing Device driver then reboot.</li>
</ol>
<p>Now the mouse in the VM should be perfectly synchronized.</p>
<h2>Display Drivers</h2>
<p>This is necessary to get high color and resolution support.</p>
<ol>
<li>In the VM hardware settings, switch to the ISO containing the Universal VBE Video Display Driver.</li>
<li>Back in the console, open <strong>Display Properties</strong> then click <strong>Display Type...</strong>.</li>
</ol>
<p><a href="/images/win_nt_display.png"><img src="/images/win_nt_display.png" alt="Display Properties" /></a></p>
<ol start="3">
<li>Click <strong>Change...</strong></li>
</ol>
<p><a href="/images/win_nt_display2.png"><img src="/images/win_nt_display2.png" alt="Display Type" /></a></p>
<ol start="4">
<li>Click <strong>Have Disk...</strong>.</li>
</ol>
<p><a href="/images/win_nt_display3.png"><img src="/images/win_nt_display3.png" alt="Change Display" /></a></p>
<ol start="5">
<li>Click <strong>Browse...</strong></li>
</ol>
<p><a href="/images/win_nt_install_from_disk.png"><img src="/images/win_nt_install_from_disk.png" alt="Install From Disk" /></a></p>
<ol start="6">
<li>Navigate to <strong>D:\Vbe30\Nt4</strong>, then click <strong>Open...</strong>. Then click <strong>Ok...</strong></li>
</ol>
<p><a href="/images/win_nt_locate_file.png"><img src="/images/win_nt_locate_file.png" alt="Locate File" /></a></p>
<ol start="7">
<li>Install <strong>AnaPa Corp VBE Miniport</strong>. Then reboot.</li>
</ol>
<p><a href="/images/win_nt_vbe.png"><img src="/images/win_nt_vbe.png" alt="VBE Miniport" /></a></p>
<p>Now you can enjoy Windows NT 4 in true color and high resolution. Here it is at 1080p!</p>
<p><a href="/images/win_nt_high_res.png"><img src="/images/win_nt_high_res.png" alt="High Resolution Windows NT4" /></a></p>
<h2>Network Card Setup</h2>
<p>Now it's time to get on the Internet.</p>
<ol>
<li>In the VM hardware settings, switch to the ISO containing the Realtek 8139 drivers.</li>
<li>Back in the console, go to <strong>Start &gt; Settings &gt; Control Panel Network</strong>. The go to the <strong>Adapters</strong> tab.</li>
</ol>
<p><a href="/images/win_nt_network_adapters2.png"><img src="/images/win_nt_network_adapters2.png" alt="Network Adapters" /></a></p>
<ol start="3">
<li>Click <strong>Add...</strong>.</li>
<li>Click <strong>Have Disk...</strong></li>
<li>In the Insert Disk dialog, enter <strong>D:</strong></li>
</ol>
<p><a href="/images/win_nt_insert2.png"><img src="/images/win_nt_insert2.png" alt="Insert Disk" /></a></p>
<ol start="6">
<li>Finishing installing the PCI Fast Ethernet Adapter.</li>
</ol>
<p><a href="/images/win_nt_fast_ethernet.png"><img src="/images/win_nt_fast_ethernet.png" alt="Fast Ethernet Adapter" /></a></p>
<ol start="7">
<li>Select the MS Loopback Adapter and click <strong>Remove...</strong>. Then click <strong>Yes</strong>.</li>
</ol>
<p><a href="/images/win_nt_rm_loopback.png"><img src="/images/win_nt_rm_loopback.png" alt="Delete Loopback Adapter" /></a></p>
<ol start="8">
<li>Click <strong>Close</strong>. You should now have the option to configure your IP address. Configure it to your liking. I chose DHCP.</li>
</ol>
<p><a href="/images/win_nt_ip2.png"><img src="/images/win_nt_ip2.png" alt="TCP/IP Properties" /></a></p>
<ol start="9">
<li>Reboot and see if you're online.</li>
</ol>
<p><a href="/images/win_nt_internet.png"><img src="/images/win_nt_internet.png" alt="INTERNET!" /></a></p>
<p><a href="/images/win_nt_internet2.png"><img src="/images/win_nt_internet2.png" alt="MORE INTERNET!" /></a></p>
<h2>Conclusion</h2>
<p>We've installed the OS, set it up with better performing SCSI drivers, installed Service Pack 6, made the mouse usable, gave it better graphics, and got it online. Now what?</p>
<p>Add a bigger disk. Share some files to your old Windows machines. Learn how old domain controllers worked. Set up Exchange and get some mail going.</p>
<p>But most important, remember to have fun! Thank you for reading.</p>
<p>Want to discuss? Email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>NetBSD &amp; iBooks &amp; Python, oh my!</title>
        <link>https://blog.pipetogrep.org/2025/05/14/netbsd-ibooks-python-oh-my/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/05/14/netbsd-ibooks-python-oh-my/</guid>
        <pubDate>Wed, 14 May 2025 16:52:30 -0400</pubDate>
        <atom:updated>2025-05-30T14:27:14-04:00</atom:updated>
        <description><![CDATA[<figure><img src="https://blog.pipetogrep.org/images/ibook2.jpg" alt="NetBSD &amp; iBooks &amp; Python, oh my!" title="Would you believe it feels faster than Windows 11?"><figcaption>Would you believe it feels faster than Windows 11?</figcaption></figure><h2>Preamble</h2>
<p><a href="https://www.netbsd.org/">NetBSD</a> is my favorite of the &quot;proper&quot; Unix operating systems. There are many technical reasons one could point to, including its speed, simplicity, and small install footprint. My favorite reason, however, is in NetBSD's slogan: <a href="https://www.netbsd.org/about/portability.html">&quot;Of course it runs NetBSD!&quot;</a></p>
<p>It is no secret that I am a fan of old hardware. My rule to prevent my collecting from becoming hoarding is that each piece has to have an actual use. Since NetBSD runs on everything from high end modern systems all the way down to the Sega Dreamcast, I decided to use an iBook G4 for game development in Python with <a href="https://www.pygame.org/wiki/about">pygame</a>.</p>
<h2>The Hardware</h2>
<p>This is my 12 inch iBook G4 from early 2004. Her name is Brick.
<a href="/images/ibook1.jpg"><img src="/images/ibook1.jpg" alt="An iBook G4 named &quot;Brick&quot;" /></a></p>
<p>Brick is decked out with:</p>
<ul>
<li>A 1 GHz G4 PowerPC Processor</li>
<li>1.25 GB or RAM</li>
<li>A 128 GB SSD</li>
<li>An ATI Mobility Radeon 9200</li>
<li>1024x768 LCD</li>
</ul>
<h2>NetBSD</h2>
<p>Obviously an iBook G4 is long out of support for OS updates. We need an alternate OS if we want to run up-to-date software on this device. NetBSD fits the bill perfectly.</p>
<p>NetBSD is a free and open-source Unix-like operating system based on the Berkeley Software Distribution (BSD). It's initial release was April 19, 1993 and continues to be developed today. The current version is 10.1 and is the version I am currently running. Why NetBSD on an iBook G4 and not Linux?</p>
<ul>
<li>First and foremost, it runs! Most Linux distributions have all but dropped PowerPC 32 bit support. There is still a community supported version of Debian Sid but the installer is hit or miss. Even when I do get it running, things like CPU frequency scaling requiring ancient packages, brightness control wonkiness, audio difficulties, video driver problems, and other various issues make the experience death by a thousand cuts.</li>
<li>It's fast! Even compared to Linux running on my much faster PowerMac G4, the iBook runs pygame at 60 FPS vs the PowerMac's 25 FPS. Both were running on a non-hardware accelerated X environment.</li>
<li>NetBSD runs better. All the issues I mentioned previously do not exist for me on NetBSD. Volume and brightness control keyboard shortcuts work even outside of a desktop environment (even in the console!). CPU frequency scaling works. Audio works. Video drivers work. While not everything works like suspend and 3D acceleration, what I need does and does without issue.</li>
<li>Modern and up-to-date packages. The iBook gets a new lease on life with modern encryption ciphers and certificates. Most importantly, modern Python!</li>
</ul>
<h2>pygame</h2>
<p>Per their <a href="https://www.pygame.org/wiki/about">about page</a>, &quot;Pygame is a set of Python modules designed for writing games. It is written on top of the excellent SDL library. This allows you to create fully featured games and multimedia programs in the python language. Pygame is highly portable and runs on nearly every platform and operating system.&quot;</p>
<p>On the date of this post, 32 bit PowerPC NetBSD has pygame's latest 2.6.0 release available. The only adjustment I had to make to get it to run on the iBook was to disable GLX in my xorg.conf.</p>
<h2>The Desktop Environment</h2>
<p>Don't expect miracles. There will be no 3D and no GPU or acceleration due to older video cards not being as well supported. Gnome or KDE, while available, won't run at all. XFCE runs OK, but is rather slow.</p>
<p>NetBSD ships with <a href="https://www.ctwm.org/index.html">CTWM</a> by default which is very small, basic, and fast, but still quite usable.</p>
<p><a href="/images/ctwm.png"><img src="/images/ctwm.png" alt="CTWM" /></a></p>
<p>I opted for <a href="https://i3wm.org/">i3</a> which is a dynamic tiling window manager.</p>
<h2>The Editing Environment</h2>
<p>Why <a href="https://www.vim.org/">Vim</a> of course! I use that plus <a href="https://github.com/amix/vimrc">The Ultimate vimrc</a> which provides a lovely, pre-built, and capable Vim environment so I can just get to work and stop messing with my configs! The biggest advantage of Vim for this use case is it's every bit as powerful as larger editors like Visual Studio Code but runs with a mere fraction of the resources.</p>
<h2>What Kind of Game?</h2>
<p>Kind of like a geometric puzzle game meets Dominoes where scoring is based on volume and symmetry. It is called &quot;Slantics&quot;. I can't take credit for the concept. That goes to my buddy Rick. Here is my <a href="https://github.com/llamallama/slantics">source code</a> for it. Here is a tiny sample of what it looks like.</p>
<p><a href="/images/slantics.gif"><img src="/images/slantics.gif" alt="Slantics" /></a></p>
<p>And here it is running on Brick!</p>
<p><a href="/images/ibook3.jpg"><img src="/images/ibook3.jpg" alt="iBook G4 Running Slantics" /></a></p>
<h2>Conclusion</h2>
<p>Just because a computer is old does not mean that it's trash. It also does not mean that it can't run more modern software even if in a more limited fashion. In the case of this computer, it's gorgeous and a joy to code on and deserves to be used for something enjoyable.</p>
<p>Thank you for reading!</p>
<p>Want to discuss? Email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>A Geographically Distributed Retro LAN with pfSense and FreshTomato</title>
        <link>https://blog.pipetogrep.org/2025/05/08/a-geographically-distributed-retro-lan-with-pfsense-and-freshtomato/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/05/08/a-geographically-distributed-retro-lan-with-pfsense-and-freshtomato/</guid>
        <pubDate>Thu, 08 May 2025 21:29:05 -0400</pubDate>
        <atom:updated>2025-05-30T14:32:47-04:00</atom:updated>
        <description><![CDATA[<figure><img src="https://blog.pipetogrep.org/images/retro_lan.png" alt="A Geographically Distributed Retro LAN with pfSense and FreshTomato" title="Retro LAN Diagram"><figcaption>Retro LAN Diagram</figcaption></figure><h2>The Retro LAN</h2>
<p>I have a long time friend from college who got me into the retro computing hobby. He lives in Florida and I live in New York. This post describes how we're able to play on our 90s laptops together as if we were on the same network despite being in different states.</p>
<p>Let's back up a little. What does &quot;retro LAN&quot; even mean? My definition is a network solely dedicated to connecting old computers with each other. Since &quot;old&quot; is subjective, the definition here encompasses any computer that can connect via IEEE 802.3 Ethernet via RJ45 cable or 802.11 WiFi. For my friend and I, that includes Macintosh and PC laptops from the 90s, PowerPC Macs from the early 2000s, and Windows XP laptops.</p>
<p>What does one do with a retro LAN? In our case we have and will:</p>
<ul>
<li>Chat with Microsoft NetMeeting on Windows 98 (have)</li>
<li>Screen share and remote control each other's Windows 98 machines via NetMeeting (have)</li>
<li>Share files between Windows 98 machines via workgroup file sharing (have)</li>
<li>Video conference with iChat on OS X 10.3 - 10.5 (have)</li>
<li>Playing multiplayer games via TCP/IP and IPX (have)</li>
<li>Setting up old-school Win NT and/or Novell NetWare servers and having clients connect to them (will)</li>
</ul>
<h2>Requirements</h2>
<p>The way to bridge two remote networks is obvious. Use a VPN. But VPNs are complex and old operating systems do not support modern encryption standards. What we wanted was something that is:</p>
<ul>
<li>Always on</li>
<li>Would not require a VPN client to run on the retro machines. Even if they could; the CPU overhead is too much</li>
<li>Maintenance free</li>
<li>Runs at the Ethernet layer (layer 2) and not the IP layer (layer 3). That allows for non-IP-based protocols to work, like IPX and AppleTalk.</li>
<li>Isolated from our main networks for security reasons. It should be a completely isolated bastion of vulnerable retro goodness.</li>
<li>For the VPN Client to be &quot;portable&quot; with the exception of needing a power cable.</li>
</ul>
<h2>The Tech</h2>
<p>Because we want layer 2 connectivity, we settled on a TAP OpenVPN network. What follows is the whole tech stack diagrammed and explained, so get your propeller beanie cap out because this is going to get technical!</p>
<p>The tech and software stack we are working with is:</p>
<ul>
<li><a href="https://www.pfsense.org/">pfSense</a> router with 1 WAN and 3 LAN interfaces</li>
<li>OpenVPN running directly on pfSense bridged to one of the interfaces</li>
<li>A modded Netgear R7000 wireless router (fast, powerful, and super cheap on eBay!) running <a href="https://freshtomato.org/">FreshTomato</a> to act as a dedicated hardware OpenVPN client. Anything that plugs into it in Florida will instantly be on the retro LAN in New York.</li>
</ul>
<p>The end result looks like this. Click for the full size version.</p>
<p><a href="/images/retro_lan.png"><img src="/images/retro_lan.png" alt="Network Diagram" /></a></p>
<h2>Assumptions</h2>
<p>This guide assumes some working knowledge of:</p>
<ul>
<li>OpenVPN Servers and Clients</li>
<li>Router Modding with alternate firmware</li>
</ul>
<h2>pfSense</h2>
<p>On the pfSense box go to <strong>Interfaces &gt; Assignments</strong>, create an interface called &quot;retro&quot;, and assign it to an unused physical interface. We're using a dedicated interface because that lets us isolate the traffic from the rest of the network.</p>
<p><a href="/images/pfsense_interfaces.png"><img src="/images/pfsense_interfaces.png" alt="pfSense Interfaces" /></a></p>
<h3>pfSense Interface Settings</h3>
<p>The retro interface needs an IP address. I chose <strong>192.168.30.1</strong></p>
<p><a href="/images/pfsense_interface_ip.png"><img src="/images/pfsense_interface_ip.png" alt="pfSense Interface IP" /></a></p>
<p>Be sure to enable DHCP for this interface and set an IP range. This will be one of two IP ranges that will be in the same subnet but will not overlap. I chose <strong>192.168.30.100 - 192.168.30.150</strong>.</p>
<p><a href="/images/pfsense_interface_dhcp.png"><img src="/images/pfsense_interface_dhcp.png" alt="pfSense Interface DHCP" /></a></p>
<h3>pfSense Firewall Rules</h3>
<p>Now we need to set up firewall rules to prevent access between the retro and main LANs. In pfSense, go to <strong>Firewall &gt; Rules</strong>. For the retro interface, we need a rule that blocks all traffic from the retro subnets to the main LAN subnets.</p>
<p><a href="/images/pfsense_retro_firewall.png"><img src="/images/pfsense_retro_firewall.png" alt="pfSense Retro Firewall" /></a></p>
<p>Next we need a firewall rule under the main LAN interface that blocks all traffic from the main LAN subnets to the retro subnets.</p>
<p><a href="/images/pfsense_lan_firewall.png"><img src="/images/pfsense_lan_firewall.png" alt="pfSense Main LAN Firewall" /></a></p>
<h3>pfSense VPN Server</h3>
<p>Now that the interfaces are created, it's time to set up the VPN server. This guide assumes some level of knowledge with OpenVPN. It is a complicated topic and its setup and administration would make this post far longer than it already is.</p>
<p>pfSense has plenty of documentation on the topic which will walk you through pfSense's VPN wizard, certificate authority, and user certificate setup. I suggest starting with <a href="https://docs.netgate.com/pfsense/en/latest/recipes/openvpn-ra.html">this guide</a>, getting a VPN up and working first, and then modifying it for use with the retro LAN. The latter is what we will be covering here, however you can see my entire VPN setup <a href="/images/pfsense_vpn_full.png">here</a> for reference.</p>
<ul>
<li><strong>Device Mode</strong> needs to be set to <strong>tap - Layer 2 Tap Mode</strong></li>
</ul>
<p><a href="/images/pfsense_vpn_device_mode.png"><img src="/images/pfsense_vpn_device_mode.png" alt="pfSense VPN Device Mode" /></a></p>
<ul>
<li>Set <strong>Bridge Interface</strong> to the Retro interface we created earlier. We will need to manually create the bridge separately in a later step.</li>
</ul>
<p><a href="/images/pfsense_vpn_bridge_interface.png"><img src="/images/pfsense_vpn_bridge_interface.png" alt="pfSense VPN Bridge Interface" /></a></p>
<ul>
<li>Set <strong>Server Bridge DHCP Start</strong> and <strong>Server Bridge DHCP End</strong>. Make the subnet the same one from earlier (192.168.30.*) but make sure it's in a non-overlapping range. I chose <strong>192.168.30.50 - 192.168.30.99</strong>. There may be a better way to do this but I could not figure out how to get the DHCP IP range settings from earlier to apply.</li>
</ul>
<p><a href="/images/pfsense_vpn_dhcp.png"><img src="/images/pfsense_vpn_dhcp.png" alt="pfSense VPN DHCP" /></a></p>
<ul>
<li>Enable <strong>Inter-client Communication</strong></li>
</ul>
<p><a href="/images/pfsense_vpn_interclient_communication.png"><img src="/images/pfsense_vpn_interclient_communication.png" alt="pfSense VPN Inter-client Communication" /></a></p>
<ul>
<li>Enable <strong>DNS Default Domain</strong> and provide a value for DNS Default Domain. I chose Cloudflare's <strong>1.1.1.1</strong>. It might be possible to pass DNS requests through the VPN server to the DNS server listening on 192.168.30.1 for the clients but I was not able to figure it out and it wasn't that important to do so.</li>
</ul>
<p><a href="/images/pfsense_vpn_dns.png"><img src="/images/pfsense_vpn_dns.png" alt="pfSense VPN DNS" /></a></p>
<h3>pfSense OpenVPN Client Bridge</h3>
<p>Back on the Interface Assignments Page, create new interface and assign it to <strong>ovpns1 (Retro VPN)</strong>.</p>
<p><a href="/images/pfsense_interfaces2.png"><img src="/images/pfsense_interfaces2.png" alt="pfSense Client Bridge Interface" /></a></p>
<p>Under <strong>Interfaces &gt; Bridges</strong> create a new bridge with the <strong>RETRO</strong> and <strong>RETROVPN</strong> as the members.</p>
<p><a href="/images/pfsense_client_bridge.png"><img src="/images/pfsense_client_bridge.png" alt="pfSense Client Bridge" /></a></p>
<h3>pfSense User Creation</h3>
<p>A user will have to be created in order to log into the VPN server. I chose to use pfSense's local user manager. This is done simply by going to <strong>System &gt; User Manager</strong>, creating one, and assigning a password.</p>
<h3>pfSense VPN Client Export</h3>
<p>In preparation for setting up the VPN client, we need to export the client config for later reference. Before this can be done, the <strong>openvpn-client-export</strong> package must be installed. Go to <strong>System &gt; Package Manager</strong> and install it.</p>
<p>Now go to <strong>VPN &gt; OpenVPN &gt; Client Export</strong>, scroll down to the <strong>OpenVPN Clients</strong> section, and export the <strong>Most Clients</strong> option. It should download a file ending in &quot;.ovpn&quot;. Open the file in a text editor and keep it for future reference.</p>
<h2>FreshTomato on the Netgear R7000</h2>
<p>Now it is time to set up our magic remote retro LAN client box. For this, I am using a Netgear R7000 (aka AC1900), 802.11 AC WiFi Router. It has more than enough processing power for this use, is very easy to mod, and is reliable in my experience. At the time of writing, they cost $15-$20 on eBay. The end result will be a box that connects to your existing WiFi network, connects to the VPN server, and is isolated from the rest of network it resides on. We will be assuming that the
setup for this will be done on a network external to the one that pfSense is on.</p>
<p>Now we need to replace the firmware on it to give us the features we need. We will be using <a href="https://wiki.freshtomato.org/doku.php/start">FreshTomato</a> which, at the time of writing, is still actively developed and includes an OpenVPN client. This will not be a guide on how to flash and setup FreshTomato as they have their own <a href="https://wiki.freshtomato.org/doku.php/howtos">documentation</a>. I can tell you that I am using <strong>freshtomato-R7000-K26ARM-2025.2-AIO-64K.zip</strong> where the &quot;AIO&quot; means &quot;all-in-one&quot; and includes the OpenVPN client. Be sure to select the right firmware for your router or you may brick it.</p>
<p>I suggest getting to the where you can log into the FreshTomato admin page <strong>via a wired connection</strong>, and then coming back to this guide. Do <strong>NOT</strong> try configuring Tomato via a wireless connection as you won't be able to log back into it with the changes we are about to make.</p>
<h3>FreshTomato Wireless Client Mode</h3>
<p>In order to connect to the VPN, FreshTomato has to be connected to the internet. There are two options here.</p>
<ol>
<li>Connect the Netgear's WAN port into an existing switch on your network.</li>
<li>Connect use a WiFi network as FreshTomato's WAN.</li>
</ol>
<p>We will be doing option 2. In the FreshTomato admin, go to <strong>Basic &gt; Network</strong>. Set &quot;Wireless Client Mode&quot; to either the 2.4 GHz or 5 GHz radio depending on your existing network setup. You can only use one. Then set a LAN IP to something outside of your local network's subnet and <strong>disable the DHCP server</strong>. I chose <strong>10.0.0.1</strong>. Do not save yet.</p>
<p><a href="/images/tomato_wireless_client.png"><img src="/images/tomato_wireless_client.png" alt="FreshTomato Wireless Client Mode" /></a></p>
<p>Scroll down to the interface you selected to use as a wireless client. Set <strong>Wireless Network Mode</strong> to <strong>Wireless Client</strong>. Then put in the SSID and security credentials of your existing wireless network. Then disable the other wireless radio so it is no longer broadcasting.</p>
<p><a href="/images/tomato_wireless_connect.png"><img src="/images/tomato_wireless_connect.png" alt="FreshTomato Wireless Connection" /></a></p>
<p>Now save.</p>
<p>Next, on the computer you are using to connect to FreshTomato, set your wired connection to have a static IP of <strong>10.0.0.5</strong>. This is necessary since we disabled the DHCP server. Then navigate to <strong>10.0.0.1</strong> and you should be back at the admin interface.</p>
<p>Now go to <strong>Status &gt; Overview</strong> and verify that one radio is disabled and the other is successfully connected. You will know if it made a connection if you see a value for <strong>Signal Quality</strong></p>
<p>Now go to <strong>Status &gt; Overview</strong> and verify that one radio is disabled, that the other is wireless client mode and is successfully connected. You will know if it made a connection if you see a value for <strong>Signal Quality</strong>.</p>
<p><a href="/images/tomato_status.png"><img src="/images/tomato_status.png" alt="FreshTomato Status" /></a></p>
<h3>FreshTomato VPN Client</h3>
<p>Now for the hard part. We are ready to make our VPN client connection. Go to <strong>VPN &gt; OpenVPN Client</strong>. We will now be referencing the ovpn config file we downloaded from pfSense earlier.</p>
<p>The next part will assume your OpenVPN server has the same auth and cipher settings as mine. If not, update accordingly. Under Client 1's Basic settings set:</p>
<ul>
<li>Enable on Start: <strong>Enabled</strong></li>
<li>Interface Type: <strong>TAP</strong></li>
<li>Bridge TAP with: <strong>LAN (br0)</strong> (This corresponds to <strong>LAN1</strong> on the back of the router).</li>
<li>Protocol: <strong>UDP</strong></li>
<li>Server Address/Port: Use the IP address from the OpenVPN config we previously downloaded. It will be the same as pfSense's WAN IP. Use <strong>1194</strong> for the port.</li>
<li>Firewall: <strong>Automatic</strong></li>
<li>Authorization Mode: <strong>TLS</strong></li>
<li>TLS control channel security: <strong>Outgoing Auth (1)</strong></li>
<li>Username/Password Authentication: <strong>Enabled</strong></li>
<li>Username: The name of the user created in the &quot;pfSense User Creation&quot; step above.</li>
<li>Password: The password of the user created in the &quot;pfSense User Creation&quot; step above.</li>
<li>Username Authen. Only: <strong>Disabled</strong></li>
<li>Auth digest: <strong>SHA256</strong></li>
<li>Server is on the same subnet: <strong>Enabled</strong></li>
</ul>
<p><a href="/images/tomato_openvpn_client.png"><img src="/images/tomato_openvpn_client.png" alt="FreshTomato OpenVPN Client" /></a></p>
<p>Go to the <strong>Advanced</strong> tab for the OpenVPN client config. I left everything as the default with the exception of setting the ciphers to match pfSense's OpenVPN server settings.</p>
<ul>
<li>Data ciphers: <strong>AES-256-GCM:AES-128-GCM:CHACHA20-POLY1305:AES-256-CBC</strong></li>
</ul>
<p><a href="/images/tomato_openvpn_client_advanced.png"><img src="/images/tomato_openvpn_client_advanced.png" alt="FreshTomato OpenVPN Client Advanced" /></a></p>
<p>Go to the <strong>Keys</strong> tab for the OpenVPN client config. We will be referencing the ovpn config we previously downloaded.</p>
<ul>
<li>Static Key: Copy and paste from <strong>-----BEGIN OpenVPN Static key V1-----</strong> to <strong>-----END OpenVPN Static key V1-----</strong></li>
<li>Certificate Authority: Look for the <strong>&lt;ca&gt;</strong> section then from under it copy and paste from <strong>-----BEGIN CERTIFICATE-----</strong> to <strong>-----END CERTIFICATE-----</strong>.</li>
<li>Client Certificate: Look for the <strong>&lt;cert&gt;</strong> section then from under it copy and paste from <strong>-----BEGIN CERTIFICATE-----</strong> to <strong>-----END CERTIFICATE-----</strong>.</li>
<li>Client Key: Copy and paste from <strong>-----BEGIN PRIVATE KEY-----</strong> to <strong>-----END PRIVATE KEY-----</strong></li>
</ul>
<p><a href="/images/tomato_openvpn_client_keys.png"><img src="/images/tomato_openvpn_client_keys.png" alt="FreshTomato OpenVPN Client Keys" /></a></p>
<p>Save then hit that <strong>Start Now</strong> button!</p>
<h2>Status and Debugging</h2>
<p>Back in the pfSense admin page, go to <strong>Status OpenVPN</strong>. You should see a connected client.</p>
<p><a href="/images/pfsense_vpn_status.png"><img src="/images/pfsense_vpn_status.png" alt="pfSense OpenVPN Status" /></a></p>
<p>If you do not see a client, it is time to troubleshoot. The best place to do this is under <strong>Status &gt; System Logs &gt; OpenVPN</strong>. Look for any errors, search for the error message in your favorite search engine or LLM, correct them, and try again.</p>
<h2>Testing Your Work</h2>
<p>It is time to plug a network cable into the FreshTomato device. This will <strong>only</strong> work by plugging into <strong>LAN1</strong> as that is the port the TAP connection is bridged to. Upon plugging in, the machine should receive an address in the 192.168.30.* range.</p>
<p>Congratulations! That FreshTomato router is now a maintenance free, remote gateway to your very own retro LAN. Because the client's existing WiFi network is its WAN, it is isolated from everything else on the main network it is connected to. Because of the separate interface and firewall rules on pfSense, the retro LAN is isolated from any other network as well. You are now safe from Blaster Worms and ILOVEYOU viruses!</p>
<p>Have fun!</p>
<p>Want to discuss? Email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>IDE Drive Adapters and Picky Retro Computers</title>
        <link>https://blog.pipetogrep.org/2025/05/06/ide-drive-adapters-and-picky-retro-computers/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/05/06/ide-drive-adapters-and-picky-retro-computers/</guid>
        <pubDate>Tue, 06 May 2025 00:50:10 -0400</pubDate>
        <atom:updated>2025-05-30T14:29:11-04:00</atom:updated>
        <description><![CDATA[<figure><img src="https://blog.pipetogrep.org/images/drake_cf_cards.jpg" alt="IDE Drive Adapters and Picky Retro Computers" title="Removable, no. Fixed, yes."><figcaption>Removable, no. Fixed, yes.</figcaption></figure><p>I recently acquired a Dell Inspiron 7000 Laptop from 1998. It's a beast of a laptop weighing in at 8 pounds! It has a Pentium II 300 MHz Processor, 320 MB of RAM, and a removable ATI video card! What it did not have, however, was a hard drive.</p>
<p>I'm no stranger to using IDE adapters that convert relatively modern media like SD cards or SATA SSDs to work as a laptop IDE drive. I tried one of the latter, but no luck. The Dell saw no hard drive in its BIOS settings. What's worse is the BIOS is extremely limited, only allowing for auto drive detection.</p>
<p>After some research, I decided to go with the Compact Flash (CF) Card to IDE adapter route. It turns out that CF Cards can behave exactly like an IDE drive. In fact, CF to IDE adapters have no chips on them, only traces to convert the CF Card pinout to IDE.</p>
<p>That still didn't work. After trying multiple CF cards (8GB and under) and multiple CF to IDE adapters, I was ready to purchase some old spinning rust of dubious quality off of eBay or either give up. Then I learned is that CF Cards have two modes, removable and fixed.</p>
<p>While some computers will boot from CF cards in removable mode, others will only allow booting from a card in fixed disk mode. That left me with two options. Purchase an industrial grade CF card (expensive mistake if it didn't work) or try to convert an existing CF Card.</p>
<p>Why an industrial CF card? Not only are they more reliable with their SLC NAND, but they default to fixed mode. Before going that route, I decided to try and convert a removable consumer grade card. But how do we convert it?</p>
<p>An old utility created by Sandisk that does exactly that called <a href="https://vogonsdrivers.com/getfile.php?fileid=1862">ATCFWCHG</a>. Problem is, there are not many CF cards it will work on. Per <a href="https://www.vogons.org/viewtopic.php?p=1326309#p1326309">this Vogons post</a>, I purchased this known convertible card to test with.</p>
<p><img src="/images/cf_card_2pb.jpg" alt="SanDisk Ultra II 2GB" /></p>
<p>I installed the card with an IDE CF card adapter into another vintage machine that did recognize it, booted it from DOS and ran the <code>ATCFWCHG /P /F</code>. After seeing it fail on all the other cards I tried previously, I finally got to see some success.</p>
<p><img src="/images/atcfwchg.jpg" alt="ATCFWCHG Success" /></p>
<p>After that, the Dell Inspiron 7000 saw the card as available and bootable. Knowing that it works, I purchased a higher capacity industrial card. I look forward to writing more about this machine soon!</p>
<p>Want to discuss? Email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>Using BSSG, BusyBox, and Kubernetes to Host and Update Static Websites</title>
        <link>https://blog.pipetogrep.org/2025/05/05/using-bssg-busybox-and-kubernetes-to-host-and-update-static-websites/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/05/05/using-bssg-busybox-and-kubernetes-to-host-and-update-static-websites/</guid>
        <pubDate>Mon, 05 May 2025 00:00:39 -0400</pubDate>
        <atom:updated>2025-05-30T14:28:15-04:00</atom:updated>
        <description><![CDATA[<figure><img src="https://blog.pipetogrep.org/images/busybox_k8s.png" alt="Using BSSG, BusyBox, and Kubernetes to Host and Update Static Websites" title="BusyBox + k8s = Love"><figcaption>BusyBox + k8s = Love</figcaption></figure><h1>Using BusyBox to Host and Update Static Websites on Kubernetes</h1>
<p>Prerequisites:</p>
<ul>
<li>A functioning Kubernetes setup</li>
<li>A <a href="https://bssg.dragas.net">BSSG</a> site running locally on your computer</li>
<li>A GitHub repo created that contains your BSSG output. Mine is at https://github.com/llamallama/blog</li>
</ul>
<p>If you haven't heard of it, BSSG is a new and very capable static site generator written entirely in Bash. It support posts, pages, tags, themes, and more! This blog was built with it and I decided to host it from my home lab. My lab runs a flavor of Kubernetes called <a href="https://k3s.io/">k3s</a>. Since this blog is static, I wanted to find the smallest tool set I could use to host it.</p>
<p>That was when I learned that <a href="https://www.busybox.net/">busybox</a> has a all the tools required to do just that! Per BusyBox's site:</p>
<pre><code>BusyBox combines tiny versions of many common UNIX utilities into a single
small executable. It provides replacements for most of the utilities you 
usually find in GNU fileutils, shellutils, etc. The utilities in BusyBox 
generally have fewer options than their full-featured GNU cousins; however,
the options that are included provide the expected functionality and behave
very much like their GNU counterparts. BusyBox provides a fairly complete
environment for any small or embedded system.
</code></pre>
<p>Note that it says <em>embedded</em> systems, so this is probably not the most production ready or most performant way to do host a static site, but that is what puts the &quot;lab&quot; in &quot;home lab&quot;. Experimentation!</p>
<p>Not only can it host the site, but it can also download the code from GitHub. The way this is done will be via three of BusyBox's many utilities: <strong>http</strong>, <strong>wget</strong>, and <strong>unzip</strong>.</p>
<p>Enough preamble, here's the setup.</p>
<h2>Kubernetes</h2>
<p>Set up a standard k8s deployment and use this for the container spec, adjusting to suit your GitHub and k8s setup</p>
<pre><code>spec:
  containers:
  - name: blog
    # Launch busybox httpd
    command: [httpd]
    # Run httpd as the www-data user, in the foreground, in verbose mode, on port 8000
    args: [ -u, www-data, -f, -v, -p, &quot;8000&quot;]
    image: busybox
    workingDir: /var/www
    ports:
    - containerPort: 8000
      name: tcp8000
      protocol: TCP
    lifecycle:
      postStart:
        exec:
          command:
          - sh
          - -c
          - |
            mkdir -p /usr/local/bin;
            '#!/bin/sh';
            set -e;
            wget https://github.com/llamallama/blog/archive/refs/heads/main.zip -O /tmp/main.zip;
            rm -rf /var/www/*;
            unzip /tmp/main.zip;
            mv blog-main/* ./;
            rm -rf blog-main /tmp/main.zip;
</code></pre>
<p>In this example we are using the official busybox image and setting the workingDir to <code>/var/www</code> and having BusyBox's httpd serve the static content in /var/www. The real magic happens in the postStart lifecycle hook. It uses BusyBox's wget to download the main GitHub branch as a zip file, unzip it, and move the files to /var/www.</p>
<p>Obviously there are some part missing here. Service and ingress settings chief among them, but those are outside of the scope of this post. The relevant parts are the use of BusyBox and the postStart hook.</p>
<h2>Deploy from BSSG</h2>
<p>In your BSSG <code>scripts/</code> folder, create a file called <code>deploy.sh</code> and make it look like this, adjusting it to fit your setup.</p>
<pre><code>#!/usr/bin/env bash

set -eu -o pipefail

# Set our dirs
output_dir=~/personal/blog/output
git_dir=~/personal/blog.git

# Clear the Git dir and copy the BSSG output to it
rm -rf &quot;$git_dir&quot;/*
cp -R &quot;$output_dir&quot;/* &quot;$git_dir&quot;/

# Add, commit, and push to GitHub
cd &quot;$git_dir&quot;
git add .
git commit -am &quot;Update $(date)&quot;
git push origin main

# Redeploy the container
kubectl rollout restart deployment/blog
</code></pre>
<p>On my setup <code>~/personal/blog/output</code> contains my BSSG output. <code>~/personal/blog.git</code> is my Git repo working copy which started empty. The above script copies our blog output to our Git working copy, commits, pushes, and then uses kubectl to redeploy the pod, which will run the postStart lifecycle hook again, which will get the latest site content.</p>
<p>Next I run</p>
<pre><code>./bssg.sh build --deploy --site-url &quot;https://blog.pipetogrep.org&quot;
</code></pre>
<h2>Conclusion</h2>
<p>As you can see, it really takes very little to host a static website. In this case, Bash is our &quot;CMS&quot; and BusyBox is our web server. No JavaScript. No Apache or Nginx. Just simple (except k8s) tools to do a simple job quickly.</p>
<p>Why did I do it like this? Because I can and I wanted to!</p>
<p>Want to discuss? Email me at <a href="mailto:blog@pipetogrep.org">blog@pipetogrep.org</a>.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
    <item>
        <title>Hello World!</title>
        <link>https://blog.pipetogrep.org/2025/05/03/hello-world/</link>
        <guid isPermaLink="true">https://blog.pipetogrep.org/2025/05/03/hello-world/</guid>
        <pubDate>Sat, 03 May 2025 21:20:12 -0400</pubDate>
        <atom:updated>2025-05-05T00:48:39-04:00</atom:updated>
        <description><![CDATA[<p>Hello and welcome to blog.pipetogrep.org. I started this to write about my misadventures in retrocomputing but I'm sure I'll have plenty of other stuff in here too. This post is here to prove to myself that I can manage a blog via <a href="https://bssg.dragas.net/">BSSG</a>. I love the idea of simplistic tools to do complicated tasks and abuses of Bash shell scripting and BSSG scratches both of those itches for me. Thank you for visiting and hopefully you'll find something of value or entertainment here.</p>]]></description>
        <dc:creator>Chris Jones (blog@pipetogrep.org)</dc:creator>
    </item>
</channel>
</rss>
